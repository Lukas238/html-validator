var cheerio = require('cheerio');
var responsiveValidator = {};

function validate (fileData, responsiveData, callback){

    if(responsiveData.toUpperCase() === 'YES'){

        var fileHtml = fileData.toString();
        $ = cheerio.load(fileHtml);
        var bodyStyle = $('body').attr('style');
        var strTargetDensityDpi = $("meta[name='viewport']").attr('content');
        var style = $('style').html();

        var errorResponsive = [];
        var validateExp = [
            {
                'expression' : '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
                'str' : fileHtml,
                'result' : 'undefined'
            },
            {
                'expression' : '<html xmlns="http://www.w3.org/1999/xhtml">',
                'str' : fileHtml,
                'result' : 'undefined'
            },
            {
                'expression' : '<meta name="viewport" content="width=device-width, initial-scale=1" />',
                'str' : fileHtml,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : '<meta http-equiv="Content-Type" content="text/html; charset=utf-8"',
                'str' : fileHtml,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : '<meta name="format-detection" content="telephone=no" />',
                'str' : fileHtml,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : '<meta contentname="author"/>',
                'str' : fileHtml,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : '-ms-text-size-adjust:100%;-webkit-font-smoothing:antialiased;',
                'str' : bodyStyle,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : 'mso-table-lspace:0pt; mso-table-rspace:0pt;',
                'str' : bodyStyle,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : 'background-position:top left; background-attachment:scroll; -webkit-text-size-adjust:none;',
                'str' : bodyStyle,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : 'target-densitydpi=device-dpi',
                'str' : strTargetDensityDpi,
                'value' : true,
                'result' : 'undefined'
            },
            {
                'expression' : '@media only screen and \\(max-width:.*px\\)',
                'str' : fileHtml,
                'value' : false,
                'result' : 'undefined'
            },
            {
                'expression' : '\\[class=".*"\\]',
                'str' : style,
                'value' : false,
                'result' : 'undefined'
            }

        ];

        validateExp.forEach( function (currValue, currIndex){
            var regExp = new RegExp(currValue.expression,'i');
            currValue.result = regExp.test(currValue.str);
            if (typeof currValue.result !== 'undefined' && currValue.result === currValue.value){
                var errorTest = {
                    //quantity : 1,
                    type : currValue.expression,
                    msg : 'Not Found'
                };
                errorResponsive.push(errorTest);
            }

        });

        return callback(null, errorResponsive);
    }else{
        return callback (null, '')
    }

}

responsiveValidator.validate = validate;

module.exports = responsiveValidator;
